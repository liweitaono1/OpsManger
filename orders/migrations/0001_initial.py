# Generated by Django 2.1.4 on 2019-08-03 02:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('databases', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order_Notice_Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_type', models.SmallIntegerField(choices=[(0, 'SQL审核'), (1, '代码部署'), (2, '文件上传'), (3, '文件下载')], verbose_name='工单类型')),
                ('grant_group', models.SmallIntegerField(verbose_name='工单授权组')),
                ('mode', models.SmallIntegerField(choices=[(0, '邮箱'), (1, '微信'), (2, '钉钉')], verbose_name='工单类型')),
                ('number', models.TextField(verbose_name='通知人')),
            ],
            options={
                'verbose_name': '工单管理',
                'verbose_name_plural': '工单通知配置表',
                'db_table': 'opsmanage_order_notice_config',
                'permissions': (('orders_read_notice_config', '读取工单通知配置表权限'), ('orders_change_notice_config', '更改工单通知配置表权限'), ('orders_add_notice_config', '添加工单通知配置表权限'), ('orders_delete_notice_config', '删除工单通知配置表权限')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Order_System',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_user', models.SmallIntegerField(verbose_name='工单申请人id')),
                ('order_subject', models.CharField(blank=True, max_length=200, null=True, verbose_name='工单申请主题')),
                ('order_executor', models.SmallIntegerField(verbose_name='工单处理人id')),
                ('order_status', models.IntegerField(choices=[(1, '已拒绝'), (2, '审核中'), (3, '已部署'), (4, '待授权'), (5, '已执行'), (6, '已回滚'), (7, '已撤回'), (8, '已授权'), (9, '已失败')], default='审核中', verbose_name='工单状态')),
                ('order_level', models.IntegerField(blank=True, choices=[(0, '非紧急'), (1, '紧急')], null=True, verbose_name='工单紧急程度')),
                ('order_type', models.SmallIntegerField(choices=[(0, 'SQL审核'), (1, '代码部署'), (2, '文件上传'), (3, '文件下载')], verbose_name='工单类型')),
                ('order_cancel', models.TextField(blank=True, null=True, verbose_name='取消原因')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='工单发布时间')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='工单最后修改时间')),
            ],
            options={
                'verbose_name': '工单管理',
                'verbose_name_plural': '工单系统表',
                'db_table': 'opsmanage_order_system',
                'permissions': (('orders_read_order_system', '读取工单系统权限'), ('orders_change_order_systemr', '更改工单系统权限'), ('orders_add_order_system', '添加工单系统权限'), ('orders_delete_order_system', '删除工单系统权限')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='SQL_Audit_Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_type', models.CharField(max_length=10, verbose_name='sql类型')),
                ('order_sql', models.TextField(blank=True, null=True, verbose_name='待审核SQL内容')),
                ('order_file', models.FileField(upload_to='./sql/', verbose_name='sql脚本路径')),
                ('order_err', models.TextField(blank=True, null=True, verbose_name='失败原因')),
                ('sql_backup', models.SmallIntegerField(verbose_name='是否备份')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='orders.Order_System')),
                ('order_db', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_db', to='databases.DataBase_Server_Config', verbose_name='数据库id')),
            ],
            options={
                'verbose_name': '工单管理',
                'verbose_name_plural': 'SQL审核工单表',
                'db_table': 'opsmanage_sql_audit_order',
                'permissions': (('orders_read_sql_audit_order', '读取SQL审核工单权限'), ('orders_change_sql_audit_order', '更改SQL审核工单权限'), ('orders_add_sql_audit_order', '添加SQL审核工单权限'), ('orders_delete_sql_audit_order', '删除SQL审核工单权限')),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='SQL_Order_Execute_Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(max_length=20)),
                ('errlevel', models.IntegerField(verbose_name='错误信息')),
                ('stagestatus', models.CharField(max_length=40)),
                ('errormessage', models.TextField(blank=True, null=True, verbose_name='错误信息')),
                ('sqltext', models.TextField(blank=True, null=True, verbose_name='SQL内容')),
                ('affectrow', models.IntegerField(blank=True, null=True, verbose_name='影响行数')),
                ('sequence', models.CharField(db_index=True, max_length=30, verbose_name='序号')),
                ('backup_db', models.CharField(blank=True, max_length=100, null=True, verbose_name='Inception备份服务器')),
                ('execute_time', models.CharField(max_length=20, verbose_name='语句执行时间')),
                ('sqlsha', models.CharField(blank=True, max_length=50, null=True, verbose_name='是否启动OSC')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.SQL_Audit_Order', verbose_name='orderid')),
            ],
            options={
                'verbose_name': '工单管理',
                'verbose_name_plural': 'SQL工单执行记录表',
                'db_table': 'opsmanage_sql_execute_result',
                'default_permissions': (),
            },
        ),
        migrations.AlterUniqueTogether(
            name='order_system',
            unique_together={('order_subject', 'order_user', 'order_type')},
        ),
        migrations.AlterUniqueTogether(
            name='order_notice_config',
            unique_together={('order_type', 'mode')},
        ),
    ]
